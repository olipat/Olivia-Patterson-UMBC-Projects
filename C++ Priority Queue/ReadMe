Project title: C++ Priority Queue

Tech stack: C++ programming language in CLion by JetBrains, with Valgrind for memory leak checks

Project Technical Problem and Scope: The project focused on implementing and testing a priority queue class for managing patient data with varying priorities utilizing min-heap and max-heap configurations alongside leftist and skew structures for optimization. It also explores the efficiency of insert and remove operations, specifically their amortized time, ensuring that they perform optimally under various conditions. The main challenges included dynamic priority management, efficient heap operations, and testing. This project did not have a user interface but rather focused on testing the backend logic and algorithmic efficiency. It served as an exercise in understanding and applying data structures, specifically priority queues in the practical context of managing patient data in a healthcare scenario. 

Reflection: This project was for a data structures class, where I first delved into more extensive code testing, understanding how fast my program runs, and learning about organizing data with different methods. Testing each part of my code before putting it all together showed me how to catch mistakes early, enhanced my debugging skills, and gave me more confidence in my final product. Overall, it was a huge learning experience in making and checking efficient code, and it opened my eyes to how powerful good data organization can be. 
